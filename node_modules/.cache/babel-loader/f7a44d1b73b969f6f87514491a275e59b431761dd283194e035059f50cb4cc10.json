{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\clone\\\\fe-roadmap-site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Graph from './components/Graph';\nimport SectionList from './components/SectionList';\nimport { getSections, getGraphBySectionId } from './services/api';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sections, setSections] = useState([]);\n  const [selectedGraph, setSelectedGraph] = useState(null);\n\n  // Загружаем секции при монтировании компонента\n  useEffect(() => {\n    const fetchSections = async () => {\n      try {\n        const sectionsData = await getSections(); // Используем API для получения секций\n        setSections(sectionsData);\n      } catch (error) {\n        console.error('Error fetching sections:', error);\n      }\n    };\n    fetchSections();\n  }, []);\n  const handleSectionClick = async sectionId => {\n    try {\n      const graphData = await getGraphBySectionId(sectionId); // Используем API для получения графа\n      setSelectedGraph(graphData); // Сохраняем граф в состоянии\n    } catch (error) {\n      console.error('Error fetching graph:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SectionList, {\n        sections: sections,\n        onSectionClick: handleSectionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: selectedGraph && /*#__PURE__*/_jsxDEV(Graph, {\n          graph: selectedGraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F5RhcdObS9I544qSIuO9yG38KEc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Graph","SectionList","getSections","getGraphBySectionId","jsxDEV","_jsxDEV","App","_s","sections","setSections","selectedGraph","setSelectedGraph","fetchSections","sectionsData","error","console","handleSectionClick","sectionId","graphData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSectionClick","graph","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/clone/fe-roadmap-site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Graph from './components/Graph';\r\nimport SectionList from './components/SectionList';\r\nimport { getSections, getGraphBySectionId } from './services/api'; \r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [sections, setSections] = useState([]);\r\n  const [selectedGraph, setSelectedGraph] = useState(null);\r\n\r\n  // Загружаем секции при монтировании компонента\r\n  useEffect(() => {\r\n    const fetchSections = async () => {\r\n      try {\r\n        const sectionsData = await getSections(); // Используем API для получения секций\r\n        setSections(sectionsData);\r\n      } catch (error) {\r\n        console.error('Error fetching sections:', error);\r\n      }\r\n    };\r\n\r\n    fetchSections();\r\n  }, []);\r\n\r\n  const handleSectionClick = async (sectionId) => {\r\n    try {\r\n      const graphData = await getGraphBySectionId(sectionId); // Используем API для получения графа\r\n      setSelectedGraph(graphData); // Сохраняем граф в состоянии\r\n    } catch (error) {\r\n      console.error('Error fetching graph:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Header />\r\n      <div className=\"main-content\">\r\n        <SectionList sections={sections} onSectionClick={handleSectionClick} />\r\n        <div className=\"content\">\r\n          {selectedGraph && (\r\n            <Graph graph={selectedGraph} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMX,WAAW,CAAC,CAAC,CAAC,CAAC;QAC1CO,WAAW,CAACI,YAAY,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAG,MAAOC,SAAS,IAAK;IAC9C,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMf,mBAAmB,CAACc,SAAS,CAAC,CAAC,CAAC;MACxDN,gBAAgB,CAACO,SAAS,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACET,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bf,OAAA,CAACP,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3Bf,OAAA,CAACJ,WAAW;QAACO,QAAQ,EAAEA,QAAS;QAACiB,cAAc,EAAET;MAAmB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvEnB,OAAA;QAAKc,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrBV,aAAa,iBACZL,OAAA,CAACL,KAAK;UAAC0B,KAAK,EAAEhB;QAAc;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC/B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNnB,OAAA,CAACN,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACjB,EAAA,CAzCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}