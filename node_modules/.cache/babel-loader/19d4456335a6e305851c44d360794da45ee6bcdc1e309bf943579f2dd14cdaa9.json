{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\clone\\\\fe-roadmap-site\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, addEdge, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  data: {\n    label: 'Theme 1'\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}, {\n  id: '2',\n  data: {\n    label: 'Theme 2'\n  },\n  position: {\n    x: 150,\n    y: 150\n  }\n}];\nconst initialEdges = [{\n  id: '1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}];\nexport default function Graph() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [copiedNode, setCopiedNode] = useState(null);\n  const onConnect = useCallback(connection => setEdges(eds => addEdge(connection, eds)), [setEdges]);\n  const addNode = () => {\n    const newNode = {\n      id: (nodes.length + 1).toString(),\n      data: {\n        label: `Theme ${nodes.length + 1}`\n      },\n      position: {\n        x: 250,\n        y: 100 + nodes.length * 50\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  };\n  const handleKeyDown = useCallback(event => {\n    if (event.ctrlKey && event.key === 'c') {\n      // Copy the selected node\n      const selectedNode = nodes.find(node => node.selected);\n      if (selectedNode) setCopiedNode(selectedNode);\n    }\n    if (event.ctrlKey && event.key === 'v' && copiedNode) {\n      // Paste the copied node\n      const newNode = {\n        ...copiedNode,\n        id: (nodes.length + 1).toString(),\n        position: {\n          x: copiedNode.position.x + 50,\n          y: copiedNode.position.y + 50\n        }\n      };\n      setNodes(nds => [...nds, newNode]);\n    }\n  }, [nodes, copiedNode]);\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNode,\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n        zIndex: 10,\n        padding: '10px',\n        background: '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"mKYAq3CSIhZVpXvt7JCwNhEAlK4=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","Background","Controls","MiniMap","addEdge","useNodesState","useEdgesState","jsxDEV","_jsxDEV","initialNodes","id","data","label","position","x","y","initialEdges","source","target","animated","Graph","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","copiedNode","setCopiedNode","onConnect","connection","eds","addNode","newNode","length","toString","nds","handleKeyDown","event","ctrlKey","key","selectedNode","find","node","selected","useEffect","window","addEventListener","removeEventListener","style","height","children","onClick","top","left","zIndex","padding","background","color","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","fitView","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/clone/fe-roadmap-site/src/components/Graph.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nconst initialNodes = [\r\n  { id: '1', data: { label: 'Theme 1' }, position: { x: 0, y: 0 } },\r\n  { id: '2', data: { label: 'Theme 2' }, position: { x: 150, y: 150 } },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: '1-2', source: '1', target: '2', animated: true },\r\n];\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [copiedNode, setCopiedNode] = useState(null);\r\n\r\n  const onConnect = useCallback(\r\n    (connection) => setEdges((eds) => addEdge(connection, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const addNode = () => {\r\n    const newNode = {\r\n      id: (nodes.length + 1).toString(),\r\n      data: { label: `Theme ${nodes.length + 1}` },\r\n      position: { x: 250, y: 100 + nodes.length * 50 },\r\n    };\r\n    setNodes((nds) => [...nds, newNode]);\r\n  };\r\n\r\n  const handleKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.ctrlKey && event.key === 'c') {\r\n        // Copy the selected node\r\n        const selectedNode = nodes.find((node) => node.selected);\r\n        if (selectedNode) setCopiedNode(selectedNode);\r\n      }\r\n\r\n      if (event.ctrlKey && event.key === 'v' && copiedNode) {\r\n        // Paste the copied node\r\n        const newNode = {\r\n          ...copiedNode,\r\n          id: (nodes.length + 1).toString(),\r\n          position: {\r\n            x: copiedNode.position.x + 50,\r\n            y: copiedNode.position.y + 50,\r\n          },\r\n        };\r\n        setNodes((nds) => [...nds, newNode]);\r\n      }\r\n    },\r\n    [nodes, copiedNode]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [handleKeyDown]);\r\n\r\n  return (\r\n    <div style={{ height: '100vh', position: 'relative' }}>\r\n      <button\r\n        onClick={addNode}\r\n        style={{\r\n          position: 'absolute',\r\n          top: 10,\r\n          left: 10,\r\n          zIndex: 10,\r\n          padding: '10px',\r\n          background: '#007bff',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '5px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Add Node\r\n      </button>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        fitView\r\n      >\r\n        <Background />\r\n        <MiniMap />\r\n        <Controls />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,SAAS,IACdC,UAAU,EACVC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,aAAa,EACbC,aAAa,QACR,WAAW;AAClB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE;AAAE,CAAC,EACjE;EAAEL,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI;AAAE,CAAC,CACtE;AAED,MAAMC,YAAY,GAAG,CACnB;EAAEN,EAAE,EAAE,KAAK;EAAEO,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,GAAG;EAAEC,QAAQ,EAAE;AAAK,CAAC,CACxD;AAED,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGnB,aAAa,CAACI,YAAY,CAAC;EACpE,MAAM,CAACgB,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGrB,aAAa,CAACU,YAAY,CAAC;EACpE,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMgC,SAAS,GAAG/B,WAAW,CAC1BgC,UAAU,IAAKL,QAAQ,CAAEM,GAAG,IAAK5B,OAAO,CAAC2B,UAAU,EAAEC,GAAG,CAAC,CAAC,EAC3D,CAACN,QAAQ,CACX,CAAC;EAED,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAG;MACdxB,EAAE,EAAE,CAACY,KAAK,CAACa,MAAM,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;MACjCzB,IAAI,EAAE;QAAEC,KAAK,EAAE,SAASU,KAAK,CAACa,MAAM,GAAG,CAAC;MAAG,CAAC;MAC5CtB,QAAQ,EAAE;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,GAAG,GAAGO,KAAK,CAACa,MAAM,GAAG;MAAG;IACjD,CAAC;IACDZ,QAAQ,CAAEc,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEH,OAAO,CAAC,CAAC;EACtC,CAAC;EAED,MAAMI,aAAa,GAAGvC,WAAW,CAC9BwC,KAAK,IAAK;IACT,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,GAAG,KAAK,GAAG,EAAE;MACtC;MACA,MAAMC,YAAY,GAAGpB,KAAK,CAACqB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;MACxD,IAAIH,YAAY,EAAEb,aAAa,CAACa,YAAY,CAAC;IAC/C;IAEA,IAAIH,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,GAAG,KAAK,GAAG,IAAIb,UAAU,EAAE;MACpD;MACA,MAAMM,OAAO,GAAG;QACd,GAAGN,UAAU;QACblB,EAAE,EAAE,CAACY,KAAK,CAACa,MAAM,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;QACjCvB,QAAQ,EAAE;UACRC,CAAC,EAAEc,UAAU,CAACf,QAAQ,CAACC,CAAC,GAAG,EAAE;UAC7BC,CAAC,EAAEa,UAAU,CAACf,QAAQ,CAACE,CAAC,GAAG;QAC7B;MACF,CAAC;MACDQ,QAAQ,CAAEc,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEH,OAAO,CAAC,CAAC;IACtC;EACF,CAAC,EACD,CAACZ,KAAK,EAAEM,UAAU,CACpB,CAAC;EAED/B,KAAK,CAACiD,SAAS,CAAC,MAAM;IACpBC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEV,aAAa,CAAC;IACjD,OAAO,MAAMS,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEX,aAAa,CAAC;EACnE,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACE9B,OAAA;IAAK0C,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEtC,QAAQ,EAAE;IAAW,CAAE;IAAAuC,QAAA,gBACpD5C,OAAA;MACE6C,OAAO,EAAEpB,OAAQ;MACjBiB,KAAK,EAAE;QACLrC,QAAQ,EAAE,UAAU;QACpByC,GAAG,EAAE,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,SAAS;QACrBC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAV,QAAA,EACH;IAED;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1D,OAAA,CAACR,SAAS;MACRsB,KAAK,EAAEA,KAAM;MACbG,KAAK,EAAEA,KAAM;MACbD,aAAa,EAAEA,aAAc;MAC7BG,aAAa,EAAEA,aAAc;MAC7BG,SAAS,EAAEA,SAAU;MACrBqC,OAAO;MAAAf,QAAA,gBAEP5C,OAAA,CAACP,UAAU;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACd1D,OAAA,CAACL,OAAO;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX1D,OAAA,CAACN,QAAQ;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC7C,EAAA,CAjFuBD,KAAK;EAAA,QACcf,aAAa,EACbC,aAAa;AAAA;AAAA8D,EAAA,GAFhChD,KAAK;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}