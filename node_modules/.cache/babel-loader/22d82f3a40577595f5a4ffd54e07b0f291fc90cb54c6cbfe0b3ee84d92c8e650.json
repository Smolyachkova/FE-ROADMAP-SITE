{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\clone\\\\fe-roadmap-site\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, ReactFlowProvider } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport '../styles/Graph.css';\nimport themesData from '../data/mockThemes.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Graph() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [initialPosition, setInitialPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    var _themesData$;\n    const nodes = {};\n    const edges = [];\n    const nodePositions = {};\n    const positionNode = (id, level, index) => {\n      const x = 250 + index * 300;\n      const y = 100 + level * 150;\n      return {\n        x,\n        y\n      };\n    };\n    themesData.forEach((theme, index) => {\n      const position = positionNode(theme.id, 0, index);\n      nodes[theme.id] = {\n        id: theme.id,\n        data: {\n          label: theme.name\n        },\n        position\n      };\n    });\n    const processNode = (theme, level) => {\n      if (nodes[theme.id]) {\n        if (theme.leftNode && nodes[theme.leftNode]) {\n          edges.push({\n            id: `e${theme.id}-${theme.leftNode}`,\n            source: theme.id,\n            target: theme.leftNode,\n            animated: true\n          });\n          processNode({\n            id: theme.leftNode,\n            leftNode: null,\n            rightNode: null\n          }, level + 1);\n        }\n        if (theme.rightNode && nodes[theme.rightNode]) {\n          edges.push({\n            id: `e${theme.id}-${theme.rightNode}`,\n            source: theme.id,\n            target: theme.rightNode,\n            animated: true\n          });\n          processNode({\n            id: theme.rightNode,\n            leftNode: null,\n            rightNode: null\n          }, level + 1);\n        }\n      }\n    };\n    themesData.forEach(theme => {\n      processNode(theme, 0);\n    });\n    setElements([...Object.values(nodes), ...edges]);\n\n    // Устанавливаем начальную позицию (позиция первой ноды)\n    const firstNode = nodes[(_themesData$ = themesData[0]) === null || _themesData$ === void 0 ? void 0 : _themesData$.id];\n    if (firstNode) {\n      setInitialPosition(firstNode.position);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        initialViewState: {\n          ...initialPosition,\n          zoom: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"MsFJklKr9DEz97hIiL0JbL3aQzs=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","Background","Controls","MiniMap","ReactFlowProvider","themesData","jsxDEV","_jsxDEV","Graph","_s","elements","setElements","initialPosition","setInitialPosition","x","y","_themesData$","nodes","edges","nodePositions","positionNode","id","level","index","forEach","theme","position","data","label","name","processNode","leftNode","push","source","target","animated","rightNode","Object","values","firstNode","children","className","initialViewState","zoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/clone/fe-roadmap-site/src/components/Graph.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactFlow, { Background, Controls, MiniMap, ReactFlowProvider } from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport '../styles/Graph.css';\r\nimport themesData from '../data/mockThemes.json';\r\n\r\nfunction Graph() {\r\n  const [elements, setElements] = useState([]);\r\n  const [initialPosition, setInitialPosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    const nodes = {};\r\n    const edges = [];\r\n    const nodePositions = {};\r\n\r\n    const positionNode = (id, level, index) => {\r\n      const x = 250 + index * 300;\r\n      const y = 100 + level * 150;\r\n      return { x, y };\r\n    };\r\n\r\n    themesData.forEach((theme, index) => {\r\n      const position = positionNode(theme.id, 0, index);\r\n      nodes[theme.id] = {\r\n        id: theme.id,\r\n        data: { label: theme.name },\r\n        position,\r\n      };\r\n    });\r\n\r\n    const processNode = (theme, level) => {\r\n      if (nodes[theme.id]) {\r\n        if (theme.leftNode && nodes[theme.leftNode]) {\r\n          edges.push({\r\n            id: `e${theme.id}-${theme.leftNode}`,\r\n            source: theme.id,\r\n            target: theme.leftNode,\r\n            animated: true,\r\n          });\r\n          processNode({ id: theme.leftNode, leftNode: null, rightNode: null }, level + 1);\r\n        }\r\n        if (theme.rightNode && nodes[theme.rightNode]) {\r\n          edges.push({\r\n            id: `e${theme.id}-${theme.rightNode}`,\r\n            source: theme.id,\r\n            target: theme.rightNode,\r\n            animated: true,\r\n          });\r\n          processNode({ id: theme.rightNode, leftNode: null, rightNode: null }, level + 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    themesData.forEach(theme => {\r\n      processNode(theme, 0);\r\n    });\r\n\r\n    setElements([\r\n      ...Object.values(nodes),\r\n      ...edges,\r\n    ]);\r\n\r\n    // Устанавливаем начальную позицию (позиция первой ноды)\r\n    const firstNode = nodes[themesData[0]?.id];\r\n    if (firstNode) {\r\n      setInitialPosition(firstNode.position);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ReactFlowProvider>\r\n      <div className=\"graph-container\">\r\n        <ReactFlow\r\n          elements={elements}\r\n          initialViewState={{\r\n            ...initialPosition,\r\n            zoom: 1,\r\n          }}\r\n        >\r\n          <Background />\r\n          <Controls />\r\n          <MiniMap />\r\n        </ReactFlow>\r\n      </div>\r\n    </ReactFlowProvider>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}