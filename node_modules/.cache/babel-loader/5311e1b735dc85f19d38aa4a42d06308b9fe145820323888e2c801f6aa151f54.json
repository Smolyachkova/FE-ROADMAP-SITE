{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\clone\\\\fe-roadmap-site\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, addEdge, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport '../styles/Graph.css';\nimport '../styles/ThemePanel.css';\nimport mockGraph from '../data/mockThemes.json';\nimport ThemePanel from './ThemePanel'; // Подключаем компонент ThemePanel\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Graph() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null); // Состояние для выбранной темы\n  const [isPanelOpen, setIsPanelOpen] = useState(false); // Состояние для открытия/закрытия панели\n\n  const onConnect = useCallback(connection => setEdges(eds => addEdge(connection, eds)), [setEdges]);\n  const handleNodeClick = (event, node) => {\n    setSelectedNode(node); // Устанавливаем выбранную тему\n    setIsPanelOpen(true); // Открываем панель\n  };\n  const importGraph = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      const text = await file.text();\n      const {\n        nodes: importedNodes,\n        edges: importedEdges\n      } = JSON.parse(text);\n      setNodes(importedNodes);\n      setEdges(importedEdges);\n    }\n  };\n  useEffect(() => {\n    setNodes(mockGraph.nodes || []);\n    setEdges(mockGraph.edges || []);\n  }, []);\n  const closePanel = () => {\n    setIsPanelOpen(false);\n    setSelectedNode(null); // Закрываем панель и сбрасываем выбранную тему\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onNodeClick: handleNodeClick // Добавляем обработчик клика на узел\n      ,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isPanelOpen && selectedNode && /*#__PURE__*/_jsxDEV(ThemePanel, {\n      theme: selectedNode.data,\n      onClose: closePanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"jD/+XHYFQgPLSURsfH8ISuTsn3Y=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","Background","Controls","MiniMap","addEdge","useNodesState","useEdgesState","mockGraph","ThemePanel","jsxDEV","_jsxDEV","Graph","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","isPanelOpen","setIsPanelOpen","onConnect","connection","eds","handleNodeClick","event","node","importGraph","file","target","files","text","importedNodes","importedEdges","JSON","parse","closePanel","style","height","position","children","onNodeClick","fitView","fileName","_jsxFileName","lineNumber","columnNumber","theme","data","onClose","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/clone/fe-roadmap-site/src/components/Graph.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport '../styles/Graph.css';\r\nimport '../styles/ThemePanel.css';\r\n\r\nimport mockGraph from '../data/mockThemes.json';\r\nimport ThemePanel from './ThemePanel'; // Подключаем компонент ThemePanel\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null); // Состояние для выбранной темы\r\n  const [isPanelOpen, setIsPanelOpen] = useState(false); // Состояние для открытия/закрытия панели\r\n\r\n  const onConnect = useCallback(\r\n    (connection) => setEdges((eds) => addEdge(connection, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const handleNodeClick = (event, node) => {\r\n    setSelectedNode(node); // Устанавливаем выбранную тему\r\n    setIsPanelOpen(true);   // Открываем панель\r\n  };\r\n\r\n  const importGraph = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const text = await file.text();\r\n      const { nodes: importedNodes, edges: importedEdges } = JSON.parse(text);\r\n      setNodes(importedNodes);\r\n      setEdges(importedEdges);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNodes(mockGraph.nodes || []);\r\n    setEdges(mockGraph.edges || []);\r\n  }, []);\r\n\r\n  const closePanel = () => {\r\n    setIsPanelOpen(false);\r\n    setSelectedNode(null); // Закрываем панель и сбрасываем выбранную тему\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '100vh', position: 'relative' }}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        onNodeClick={handleNodeClick} // Добавляем обработчик клика на узел\r\n        fitView\r\n      >\r\n        <Background />\r\n        <MiniMap />\r\n        <Controls />\r\n      </ReactFlow>\r\n      {isPanelOpen && selectedNode && (\r\n        <ThemePanel theme={selectedNode.data} onClose={closePanel} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}