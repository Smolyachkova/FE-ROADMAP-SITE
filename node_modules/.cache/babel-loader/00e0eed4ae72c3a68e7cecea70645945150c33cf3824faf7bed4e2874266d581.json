{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\clone\\\\fe-roadmap-site\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport '../styles/Graph.css';\nimport '../styles/ThemePanel.css';\nimport mockGraph from '../data/mockThemes.json';\nimport ThemePanel from './ThemePanel';\nimport { getCustomSearchResults } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Graph({\n  section,\n  language\n}) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isPanelOpen, setIsPanelOpen] = useState(false);\n  const [searchResults, setSearchResults] = useState([]); // Добавим состояние для результатов поиска\n\n  const handleNodeClick = (event, node) => {\n    setSelectedNode(node);\n    setIsPanelOpen(true);\n    const query = node.data.label; // Получаем название темы как запрос\n    fetchCustomSearchResults(node.data.label, section, language); // Выполним запрос с языком\n  };\n\n  // Метод для получения результатов поиска\n  const fetchCustomSearchResults = async (topic, technology, language) => {\n    try {\n      const results = await getCustomSearchResults(topic, technology, language); // Передаем язык\n      setSearchResults(results); // Обновляем состояние с результатами поиска\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n  const handlePaneClick = () => {\n    if (isPanelOpen) {\n      setIsPanelOpen(false);\n      setSelectedNode(null);\n    }\n  };\n  useEffect(() => {\n    setNodes(mockGraph.nodes.map(node => ({\n      ...node,\n      draggable: false\n    })));\n    setEdges(mockGraph.edges || []);\n  }, []);\n  const closePanel = () => {\n    setIsPanelOpen(false);\n    setSelectedNode(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      position: 'relative',\n      backgroundColor: '#ffffff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: handleNodeClick,\n      onPaneClick: handlePaneClick,\n      fitView: true,\n      connectable: false // Отключаем добавление соединений\n      ,\n      defaultViewport: {\n        x: 0,\n        y: 0,\n        zoom: 0.01\n      },\n      proOptions: {\n        hideAttribution: true\n      } // Убираем лого React Flow\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#e0e0e0\",\n        gap: 20,\n        variant: \"dots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        showInteractive: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isPanelOpen && selectedNode && /*#__PURE__*/_jsxDEV(ThemePanel, {\n      theme: selectedNode.data,\n      onClose: closePanel,\n      searchResults: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"al80RKCOTx0vXrtClGHdD/Hm8jg=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","mockGraph","ThemePanel","getCustomSearchResults","jsxDEV","_jsxDEV","Graph","section","language","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","isPanelOpen","setIsPanelOpen","searchResults","setSearchResults","handleNodeClick","event","node","query","data","label","fetchCustomSearchResults","topic","technology","results","error","console","handlePaneClick","map","draggable","closePanel","style","height","position","backgroundColor","children","onNodeClick","onPaneClick","fitView","connectable","defaultViewport","x","y","zoom","proOptions","hideAttribution","color","gap","variant","fileName","_jsxFileName","lineNumber","columnNumber","showInteractive","theme","onClose","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/clone/fe-roadmap-site/src/components/Graph.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport '../styles/Graph.css';\r\nimport '../styles/ThemePanel.css';\r\n\r\nimport mockGraph from '../data/mockThemes.json';\r\nimport ThemePanel from './ThemePanel';\r\nimport { getCustomSearchResults } from './services/api'; \r\n\r\n\r\nexport default function Graph({ section, language }) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isPanelOpen, setIsPanelOpen] = useState(false);\r\n  const [searchResults, setSearchResults] = useState([]); // Добавим состояние для результатов поиска\r\n\r\n  const handleNodeClick = (event, node) => {\r\n    setSelectedNode(node);\r\n    setIsPanelOpen(true);\r\n    const query = node.data.label; // Получаем название темы как запрос\r\n    fetchCustomSearchResults(node.data.label, section, language); // Выполним запрос с языком\r\n  };\r\n\r\n  // Метод для получения результатов поиска\r\n  const fetchCustomSearchResults = async (topic, technology, language) => {\r\n    try {\r\n      const results = await getCustomSearchResults(topic, technology, language); // Передаем язык\r\n      setSearchResults(results); // Обновляем состояние с результатами поиска\r\n    } catch (error) {\r\n      console.error('Error fetching search results:', error);\r\n    }\r\n  };\r\n\r\n  const handlePaneClick = () => {\r\n    if (isPanelOpen) {\r\n      setIsPanelOpen(false);\r\n      setSelectedNode(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNodes(mockGraph.nodes.map(node => ({ ...node, draggable: false })));\r\n    setEdges(mockGraph.edges || []);\r\n  }, []);\r\n\r\n  const closePanel = () => {\r\n    setIsPanelOpen(false);\r\n    setSelectedNode(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '100vh', position: 'relative', backgroundColor: '#ffffff' }}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onNodeClick={handleNodeClick}\r\n        onPaneClick={handlePaneClick}\r\n        fitView\r\n        connectable={false} // Отключаем добавление соединений\r\n        defaultViewport={{ x: 0, y: 0, zoom: 0.01 }}\r\n        proOptions={{ hideAttribution: true }} // Убираем лого React Flow\r\n      >\r\n        <Background color=\"#e0e0e0\" gap={20} variant=\"dots\" />\r\n        <MiniMap />\r\n        {/* Оставляем только те элементы управления, которые нужны */}\r\n        <Controls showInteractive={false} />\r\n      </ReactFlow>\r\n      {isPanelOpen && selectedNode && (\r\n        <ThemePanel theme={selectedNode.data} onClose={closePanel} searchResults={searchResults} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}