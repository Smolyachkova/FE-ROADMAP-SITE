{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\clone\\\\fe-roadmap-site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Graph from './components/Graph';\nimport SectionList from './components/SectionList';\nimport { getSections, getGraphBySectionId } from './services/api';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sections, setSections] = useState([]);\n  const [selectedGraph, setSelectedGraph] = useState(null);\n  const [language, setLanguage] = useState('ru'); // Состояние для языка\n\n  const handleLanguageChange = language => {\n    setLanguage(language); // Обновляем язык в родительском компоненте\n  };\n\n  // Загружаем секции при монтировании компонента\n  useEffect(() => {\n    const fetchSections = async () => {\n      try {\n        const sectionsData = await getSections(); // Используем API для получения секций\n        setSections(sectionsData);\n      } catch (error) {\n        console.error('Error fetching sections:', error);\n      }\n    };\n    fetchSections();\n  }, []);\n  const handleSectionClick = async sectionId => {\n    try {\n      const graphData = await getGraphBySectionId(sectionId); // Используем API для получения графа\n      setSelectedGraph(graphData); // Сохраняем граф в состоянии\n    } catch (error) {\n      console.error('Error fetching graph:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SectionList, {\n        sections: [{\n          id: 1,\n          technology: 'React'\n        }, {\n          id: 2,\n          technology: 'Vue'\n        }],\n        onLanguageChange: handleLanguageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: selectedGraph && /*#__PURE__*/_jsxDEV(Graph, {\n          graph: selectedGraph,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cQsPOFvvQ+NTGum1Zb0zIYh01L8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Graph","SectionList","getSections","getGraphBySectionId","jsxDEV","_jsxDEV","App","_s","sections","setSections","selectedGraph","setSelectedGraph","language","setLanguage","handleLanguageChange","fetchSections","sectionsData","error","console","handleSectionClick","sectionId","graphData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","technology","onLanguageChange","graph","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/clone/fe-roadmap-site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Graph from './components/Graph';\r\nimport SectionList from './components/SectionList';\r\nimport { getSections, getGraphBySectionId } from './services/api'; \r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [sections, setSections] = useState([]);\r\n  const [selectedGraph, setSelectedGraph] = useState(null);\r\n\r\n  const [language, setLanguage] = useState('ru'); // Состояние для языка\r\n\r\n  const handleLanguageChange = (language) => {\r\n    setLanguage(language); // Обновляем язык в родительском компоненте\r\n  };\r\n\r\n  // Загружаем секции при монтировании компонента\r\n  useEffect(() => {\r\n    const fetchSections = async () => {\r\n      try {\r\n        const sectionsData = await getSections(); // Используем API для получения секций\r\n        setSections(sectionsData);\r\n      } catch (error) {\r\n        console.error('Error fetching sections:', error);\r\n      }\r\n    };\r\n\r\n    fetchSections();\r\n  }, []);\r\n\r\n  const handleSectionClick = async (sectionId) => {\r\n    try {\r\n      const graphData = await getGraphBySectionId(sectionId); // Используем API для получения графа\r\n      setSelectedGraph(graphData); // Сохраняем граф в состоянии\r\n    } catch (error) {\r\n      console.error('Error fetching graph:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Header />\r\n      <div className=\"main-content\">\r\n      <SectionList \r\n        sections={[{ id: 1, technology: 'React' }, { id: 2, technology: 'Vue' }]} \r\n        onLanguageChange={handleLanguageChange} \r\n      />\r\n        <div className=\"content\">\r\n          {selectedGraph && (\r\n            <Graph graph={selectedGraph} language={language}/>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}